[{"id":"5992b366.f9457c","type":"tab","label":"Flow 1","disabled":false,"info":""},{"id":"3b931ee9.0688c2","type":"mqtt-broker","name":"","broker":"mqttbroker","port":"1883","clientid":"","usetls":false,"compatmode":false,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"8d5b248b.b32978","type":"ui_tab","name":"Home","icon":"dashboard","disabled":false,"hidden":false},{"id":"41e58751.45dbb8","type":"ui_base","theme":{"name":"theme-light","lightTheme":{"default":"#0094CE","baseColor":"#0094CE","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":true,"reset":false},"darkTheme":{"default":"#097479","baseColor":"#097479","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif","edited":false},"customTheme":{"name":"Untitled Theme 1","default":"#4B7930","baseColor":"#4B7930","baseFont":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"},"themeState":{"base-color":{"default":"#0094CE","value":"#0094CE","edited":false},"page-titlebar-backgroundColor":{"value":"#0094CE","edited":false},"page-backgroundColor":{"value":"#fafafa","edited":false},"page-sidebar-backgroundColor":{"value":"#ffffff","edited":false},"group-textColor":{"value":"#1bbfff","edited":false},"group-borderColor":{"value":"#ffffff","edited":false},"group-backgroundColor":{"value":"#ffffff","edited":false},"widget-textColor":{"value":"#111111","edited":false},"widget-backgroundColor":{"value":"#0094ce","edited":false},"widget-borderColor":{"value":"#ffffff","edited":false},"base-font":{"value":"-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"}},"angularTheme":{"primary":"indigo","accents":"blue","warn":"red","background":"grey"}},"site":{"name":"Node-RED Dashboard","hideToolbar":"false","allowSwipe":"false","lockMenu":"false","allowTempTheme":"true","dateFormat":"DD/MM/YYYY","sizes":{"sx":48,"sy":48,"gx":6,"gy":6,"cx":6,"cy":6,"px":0,"py":0}}},{"id":"7de2c30c.383e0c","type":"ui_group","name":"Philosophenproblem","tab":"8d5b248b.b32978","order":5,"disp":true,"width":"24","collapse":false},{"id":"9d6e5737.7cd208","type":"mqtt in","z":"5992b366.f9457c","name":"","topic":"State","qos":"2","datatype":"auto","broker":"3b931ee9.0688c2","x":410,"y":380,"wires":[["7e193a04.1a7074","4dae077a.ff2d78"]]},{"id":"7e193a04.1a7074","type":"json","z":"5992b366.f9457c","name":"","property":"payload","action":"","pretty":false,"x":630,"y":380,"wires":[["b3e4f85.dcc3d08"]]},{"id":"4dae077a.ff2d78","type":"debug","z":"5992b366.f9457c","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":630,"y":260,"wires":[]},{"id":"6445bedc.50a14","type":"ui_template","z":"5992b366.f9457c","group":"7de2c30c.383e0c","name":"","order":0,"width":0,"height":0,"format":"<div style=\"display: flex; justify-content: center; align-items: center;\">\n\n    <svg width=\"800\" height=\"800\" viewBox=\"0 0 400 400\" xmlns=\"http://www.w3.org/2000/svg\" style=\"background: #f4f4f4; border-radius: 50%; margin: auto; display: block;\">\n      <!-- Zentrum des Tisches -->\n      <circle cx=\"200\" cy=\"200\" r=\"50\" fill=\"#8b4513\" />\n    \n      <!-- Philosophen als Kreise -->\n      <g ng-repeat=\"philosopher in msg.payload\" ng-attr-transform=\"rotate({{ (360 / msg.payload.length) * $index }}, 200, 200)\">\n        <!-- Philosophenstatus (Farben je nach Zustand) -->\n        <circle cx=\"200\" cy=\"100\" r=\"30\" \n                ng-style=\"{'fill': \n                  philosopher.state === 'Thinking' ? 'blue' : \n                  philosopher.state === 'Eating' ? 'green' : \n                  philosopher.state === 'Dead' ? 'red' : \n                  philosopher.state === 'Trying_to_eat' ? 'orange' : 'gray'}\" />\n    \n        <!-- Text für Philosophen ID -->\n        <text x=\"200\" y=\"100\" dy=\"5\" text-anchor=\"middle\" fill=\"white\" style=\"font-size: 14px;\" pointer-events=\"none\">\n          {{ philosopher.id }}\n        </text>\n        \n        <!-- Hinzufügen der Anzahl der Mahlzeiten (times_eaten) -->\n        <text x=\"200\" y=\"120\" dy=\"5\" text-anchor=\"middle\" fill=\"yellow\" style=\"font-size: 12px;\" pointer-events=\"none\">\n         {{ philosopher.times_eaten }}\n        </text>\n      </g>\n    </svg>\n    \n    <svg width=\"200\" height=\"200\" viewBox=\"0 0 100 80\" xmlns=\"http://www.w3.org/2000/svg\" style=\"background: #f4f4f4; margin: auto; display: block;\">\n      <!-- Legende außerhalb des Kreises -->\n      <g transform=\"translate(10, 10)\">\n        <!-- Thinking -->\n        <rect x=\"0\" y=\"0\" width=\"15\" height=\"15\" fill=\"blue\" />\n        <text x=\"20\" y=\"12\" fill=\"black\" style=\"font-size: 12px;\">Thinking</text>\n    \n        <!-- Eating -->\n        <rect x=\"0\" y=\"20\" width=\"15\" height=\"15\" fill=\"green\" />\n        <text x=\"20\" y=\"32\" fill=\"black\" style=\"font-size: 12px;\">Eating</text>\n    \n        <!-- Trying to eat -->\n        <rect x=\"0\" y=\"40\" width=\"15\" height=\"15\" fill=\"orange\" />\n        <text x=\"20\" y=\"52\" fill=\"black\" style=\"font-size: 12px;\">Trying to eat</text>\n    \n        <!-- Dead -->\n        <rect x=\"0\" y=\"60\" width=\"15\" height=\"15\" fill=\"red\" />\n        <text x=\"20\" y=\"72\" fill=\"black\" style=\"font-size: 12px;\">Dead</text>\n      </g>\n    </svg>\n</div>\n","storeOutMessages":true,"fwdInMessages":true,"resendOnRefresh":true,"templateScope":"local","x":1040,"y":380,"wires":[[]]},{"id":"b3e4f85.dcc3d08","type":"function","z":"5992b366.f9457c","name":"","func":"const philosophers = context.get(\"philosophers\") || {};\n\n// Update Philosophen-Status\nphilosophers[msg.payload.ID] = {\n    id: msg.payload.ID,\n    state: msg.payload.state,\n    times_eaten: msg.payload.times_eaten,\n};\n\n// Konvertiere zu einer Liste\nconst philosopherList = Object.values(philosophers);\n\n// Speichere zurück in den Kontext\ncontext.set(\"philosophers\", philosophers);\n\n// Übergebe die Liste an die nächste Node\nmsg.payload = philosopherList;\nreturn msg;\n","outputs":1,"noerr":0,"initialize":"","finalize":"","x":820,"y":380,"wires":[["6445bedc.50a14"]]}]